apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx-log
  labels:
    app : my-dep
spec:
  capacity:
    storage: 10Gi 
  accessModes:
    - ReadWriteMany  #ReadWriteOnce #ReadOnlyMany #ReadWriteMany
  nfs:
    path: "/storage/nginx/log"  #path nfs share
    server: 192.168.90.80   #nfs server IP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-dev 
  labels:
    app: my-dep
spec:
  accessModes:
    - ReadWriteMany #ReadWriteOnce #ReadOnlyMany #ReadWriteMany
  resources:
    requests:
      storage: 3Gi 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-dep
  name: my-dep
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: my-dep
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: my-dep
    spec:
      containers:
      - name:  my-dep
        image:  nginx:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        ports:
         - containerPort: 80
           protocol: TCP
        volumeMounts:
        - mountPath: /var/log/nginx
          name: site-log 
      volumes:
      - name: site-log
        persistentVolumeClaim:
          claimName: nginx-dev

---
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: default
spec:
  selector:
    app: my-dep
  type: ClusterIP
  ports:
  - name: my-dep
    protocol: TCP
    port: 80
    targetPort: 80 
  externalIPs:
   - 192.168.90.96 #worker node ip

